---
- name: enable powertools
  ansible.builtin.yum_repository:
    name: powertools
    file: Rocky-PowerTools
    mirrorlist: https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&repo=PowerTools-$releasever
    description: Rocky Linux PowerTools
    gpgcheck: true
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial

- name: install centos-release-gluster10
  ansible.builtin.yum:
    name: centos-release-gluster10
    state: present

- name: install glusterfs-server
  ansible.builtin.yum:
    name: glusterfs-server
    state: present

- name: enable glusterd
  ansible.builtin.service:
    name: glusterd
    state: started
    enabled: true

- name: configure glusterd.vol
  ansible.builtin.template:
    dest: /etc/glusterfs/glusterd.vol
    src: glusterd.vol.j2
  notify:
  - restart glusterd

- meta: flush_handlers

- name: Create gluster pool
  gluster.gluster.gluster_peer:
    state: present
    nodes: "{{ ansible_play_hosts }}"
  run_once: true

- name: create gluster volume
  gluster.gluster.gluster_volume:
    state: present
    force: true # in case /srv is on the root partition
    name: poc0
    bricks: /srv/poc0
    replicas: "{{ ansible_play_hosts | length }}"
    cluster: "{{ ansible_play_hosts }}"
  run_once: true

- name: poc0 mount
  mount:
    path: /mnt/poc0
    src: localhost:/poc0
    fstype: glusterfs
    state: mounted
    opts: &mount_glusterfs_opts >-
      {% set ns = namespace(str='') -%}
      {% for i in ansible_play_hosts -%}
      {%   if ns.str == '' -%}
      {%     if i is search(':') -%}
      {%       set ns.str = '[' ~ i ~ ']' -%}
      {%     else -%}
      {%       set ns.str = i -%}
      {%     endif -%}
      {%   else -%}
      {%     if i is search(':') -%}
      {%       set ns.str = ns.str ~ ':[' ~ i ~ ']' -%}
      {%     else -%}
      {%       set ns.str = ns.str ~ ':' ~ i -%}
      {%     endif -%}
      {%   endif -%}
      {% endfor -%}
      backup-volfile-servers={{ ns.str }}

- name: poc1 nfs mount
  mount:
    path: /srv/poc1
    src: "[{{ gluster_nfs_host }}]:{{ gluster_nfs_export_path }}"
    fstype: nfs
    state: mounted

- name: create bricks image container on nfs
  command:
    cmd: dd if=/dev/zero of=/srv/poc1/bricks.img bs=1k seek=100000000 count=1
    creates: /srv/poc1/bricks.img
  notify:
  - format bricks image

- meta: flush_handlers

- name: poc1 bricks mount
  mount:
    path: /srv/poc1/bricks
    src: /srv/poc1/bricks.img
    fstype: xfs
    opts: loop
    state: mounted

- name: create gluster volume on nfs
  gluster.gluster.gluster_volume:
    state: present
    name: poc1
    bricks: /srv/poc1/bricks
    force: true # create directly at mountpoint
    replicas: "{{ ansible_play_hosts | length }}"
    cluster: "{{ ansible_play_hosts }}"
  run_once: true

- name: poc1 mount
  mount:
    path: /mnt/poc1
    src: localhost:/poc1
    fstype: glusterfs
    state: mounted
    opts: *mount_glusterfs_opts
